Query
	API
		list			返回List集合，集合中元素实体对象，如果不存在，返回空集合（size==0）
		uniqueResult		返回实体对象，如果不存在，返回null
		setFirstResult		分页使用，第几条开始查，下标从0开始
		setMaxResults		分页使用，一页显示最多多少条数据
		executeUpdate		执行DML操作，insert update delete

max page first
3 1 0		4 1 0
  2 3		  2 4
  3 6		  3 8

 2 | ccc	l.rowid=r.rowid		2 | ccc 
 3 | aaa				3 | aaa 
 4 | bbb				4 | bbb 
 null					5 | ccc 
 null					6 | ccc 
 null					7 | bbb 

select r.*

right join

where l.rowid is null


2 | ccc 
3 | aaa 
4 | bbb 
5 | ccc 
6 | ccc 
7 | bbb 

- minus

2 | ccc
3 | aaa
4 | bbb





关系映射
	多对一
	一对多
	多对多
	一对一
	继承
	组件

多对一
	多个员工在同一个部门
	部门		员工
	t_dept		t_emp
	  id		  id
	  name		  name
			  dept_id

	Dept		Emp
	  id		  id
	  name		  name
			  dept


hbm2ddl.auto
	创建SessionFactory时，自动执行ddl操作
	none
	create
	update



cascade配置级联操作
	none
	save-update
	delete
	all
	delete-orphan 删除时级联删除孤儿
	all-delete-orphan

查询时关联属性默认延迟加载

根据主键查询取消关联属性的延迟加载
	lazy="false"

根据主键查询取消关联属性的延迟加载，join查询
	fetch="join"



hql语句
	join
	left join
	right join

	fetch

from Emp e
关联属性存在n+1问题，有延迟加载

lazy="false"
取消关联属性的延迟加载，还是存在n+1问题

from Emp e
join e.dept d
取消关联属性的延迟加载，不存在n+1
join了部门，并获得数据
返回类型是List<Object[]>
数组中每一个元素0的位置是员工对象，数组1的位置是部门对象
数组中多方了一个部门对象，本身员工中就有部门对象

select e
from Emp e
join e.dept d
返回List<员工对象>
查询时，join了部门，但没有获得部门数据
访问部门是由出现了延迟加载和n+1问题

from Emp e
join fetch e.dept d
查询员工时，join部门，获得数据，没有延迟加载，没有n+1问题




for(int i=0;i<3;i++){
	for(int j=0;j<2;j++){
	}
}

i定义次数	j定义次数	i	j
1		3		0	0 1
				1	0 1
				2	0 1

int i;
int j;
for(i=0;i<2;i++){
	for(j=0;j<3;j++){
	}
}

i定义次数	j定义次数	i	j
1		1		0	0 1 2
				1	0 1 2


一对多
	一个订单有多个订单明细
	订单		订单明细
	Order		Item
	  id		  id
	  no		  product
	  items		  num
			  order

	t_order		t_item
	  id		  id
	  no		  product
			  num
			  order_id


	  1 aaa 3 99.0		1 aaa 2 66.0
	  2 bbb 2 40.0		------------------
	  ------------------		66.0
		139.0

		
 1 bbb 2 40.0	
 2 aaa 3 99.0
 1 bbb 2 40.0	
 ------------------
	139.0       

	
一对多默认情况下由一方维护关系
o.id=i.order_id true


放弃关系维护权
	inverse="true"